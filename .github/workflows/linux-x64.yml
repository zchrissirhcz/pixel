name: linux-x64
on: [push, pull_request]

jobs:
  linux-gcc-x64:
    runs-on: ubuntu-20.04
    steps:
    - name: cancel-previous-runs
      uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ secrets.GITHUB_TOKEN }}

    - name: Clone repo
      uses: actions/checkout@v3

    - name: Setup Ninja
      uses: seanmiddleditch/gha-setup-ninja@v3

    # - name: aarch64-gnu-toolchain
    #   run: |
    #     sudo apt-get update
    #     sudo apt-get install g++ gcc
    
    # - name: Cache APT Packages
    #   uses: awalsh128/cache-apt-pkgs-action@latest
    #   with:
    #     packages: g++-aarch64-linux-gnu
    #     version: 1.0

    - name: cache-googletest
      id: cache-googletest
      uses: actions/cache@v3.3.2
      with:
        path: googletest-install
        key: googletest-install-x64
    - name: googletest
      if: steps.cache-googletest.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/google/googletest --depth 1
        cd googletest
        mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/googletest-install ..
        cmake --build . -j 2
        cmake --install .

    - name: cache-benchmark
      id: cache-benchmark
      uses: actions/cache@v3.3.2
      with:
        path: benchmark-install
        key: benchmark-install-x64
    - name: benchmark
      if: steps.cache-benchmark.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/google/benchmark -b v1.7.0 --depth 1
        cd benchmark
        mkdir build && cd build
        cmake -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/benchmark-install .. -DBENCHMARK_ENABLE_TESTING=OFF -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DCMAKE_POSITION_INDEPENDENT_CODE=ON
        cmake --build . -j 2
        cmake --install .

    - name: cache-opencv
      id: cache-opencv
      uses: actions/cache@v3.3.2
      with:
        path: opencv-install
        key: opencv-install-x64
    - name: opencv
      if: steps.cache-opencv.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/opencv/opencv -b 4.6.0 --depth 1
        cd opencv
        rm -rf modules/gapi
        mkdir build && cd build
        cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/opencv-install -DBUILD_LIST='core,imgcodecs,imgproc' -D BUILD_SHARED_LIBS=OFF -D BUILD_TESTS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_DOCS=OFF  -D BUILD_opencv_python3=OFF -D WITH_IPP=OFF -D WITH_PROTOBUF=OFF -D WITH_QUIRC=OFF -D WITH_EIGEN=OFF -DWITH_WEBP=OFF -DBUILD_WEBP=OFF -DWITH_OPENCL=OFF -DWITH_JAVA=OFF  -DWITH_OPENEXR=OFF -DBUILD_OPENEXR=OFF -DWITH_JASPER=OFF -D BUILD_JASPER=OFF -DWITH_TIFF=OFF -D BUILD_TIFF=OFF -DWITH_OPENJPEG=OFF -D BUILD_OPENJPEG=OFF -DCV_DISABLE_OPTIMIZATION=OFF
        cmake --build . -j 2
        cmake --install .

    - name: build
      run: |
        mkdir build-x64 && cd build-x64
        cmake -DGTest_DIR=$GITHUB_WORKSPACE/googletest-install/lib/cmake/GTest -Dbenchmark_DIR=$GITHUB_WORKSPACE/benchmark-install/lib/cmake/benchmark -DOpenCV_DIR=$GITHUB_WORKSPACE/opencv-install/lib/cmake/opencv4 -DPIXEL_USE_ASAN=OFF ..
        cmake --build . -j 2
    - name: test
      run: |
        cd build-x64
        ctest --output-on-failure -j 2